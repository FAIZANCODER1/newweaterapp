{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\appss\\\\my-app\\\\src\\\\compo\\\\weather\\\\Weatherapi.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport { Weathercard } from './Weathercard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Weatherapi = () => {\n  _s();\n\n  const [searchvalue, setsearchvalue] = useState(\"mumbai\");\n  const [tempinfo, settempinfo] = useState({});\n\n  const getweatherinfo = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchvalue}&units=metric&appid=f75ae5387e47083e3d770bbb0694dfbc`;\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n      const {\n        temp,\n        humidity,\n        pressure\n      } = data.main;\n      const {\n        main: weathermood\n      } = data.weather[0];\n      const {\n        name\n      } = data;\n      const {\n        speed\n      } = data.wind;\n      const {\n        country,\n        sunset\n      } = data.sys;\n      const mynewweather = {\n        temp,\n        humidity,\n        pressure,\n        weathermood,\n        name,\n        speed,\n        country,\n        sunset\n      };\n      settempinfo(mynewweather);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getweatherinfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"..search\",\n          autoFocus: true,\n          id: \"search\",\n          className: \"searchTerm\",\n          value: searchvalue,\n          onChange: e => setsearchvalue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"searchButton\",\n          type: \"button\",\n          onClick: getweatherinfo,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Weathercard, {\n      tempinfo: tempinfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Weatherapi, \"tQtIjptmU5bRceAXKYd2lUySwRY=\");\n\n_c = Weatherapi;\nexport default Weatherapi;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weatherapi\");","map":{"version":3,"sources":["C:/projects/appss/my-app/src/compo/weather/Weatherapi.js"],"names":["React","useState","useEffect","Weathercard","Weatherapi","searchvalue","setsearchvalue","tempinfo","settempinfo","getweatherinfo","url","res","fetch","data","json","console","log","temp","humidity","pressure","main","weathermood","weather","name","speed","wind","country","sunset","sys","mynewweather","error","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAO,cAAP;AACA,SAASC,WAAT,QAA4B,eAA5B;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,QAAD,CAA9C;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMQ,cAAc,GAAG,YAAS;AACpC,QAAG;AACH,UAAIC,GAAG,GAAE,qDAAoDL,WAAY,sDAAzE;AACA,YAAMM,GAAG,GAAE,MAAMC,KAAK,CAACF,GAAD,CAAtB;AACA,YAAMG,IAAI,GAAE,MAAMF,GAAG,CAACG,IAAJ,EAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,YAAM;AAACI,QAAAA,IAAD;AAAOC,QAAAA,QAAP;AAAkBC,QAAAA;AAAlB,UAA6BN,IAAI,CAACO,IAAxC;AACA,YAAM;AAACA,QAAAA,IAAI,EAAEC;AAAP,UAAoBR,IAAI,CAACS,OAAL,CAAa,CAAb,CAA1B;AACA,YAAM;AAACC,QAAAA;AAAD,UAAOV,IAAb;AACA,YAAM;AAACW,QAAAA;AAAD,UAAQX,IAAI,CAACY,IAAnB;AACA,YAAM;AAACC,QAAAA,OAAD;AAAWC,QAAAA;AAAX,UAAmBd,IAAI,CAACe,GAA9B;AAGA,YAAMC,YAAY,GAAC;AACfZ,QAAAA,IADe;AAEfC,QAAAA,QAFe;AAGfC,QAAAA,QAHe;AAIfE,QAAAA,WAJe;AAKfE,QAAAA,IALe;AAMfC,QAAAA,KANe;AAOfE,QAAAA,OAPe;AAQfC,QAAAA;AARe,OAAnB;AAUAnB,MAAAA,WAAW,CAACqB,YAAD,CAAX;AAEC,KAxBD,CA0BA,OAAMC,KAAN,EAAY;AACRf,MAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AAEH;AAII,GAlCD;;AAoCA5B,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACR;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,QAAZ;AACA,UAAA,WAAW,EAAC,UADZ;AAEA,UAAA,SAAS,MAFT;AAGA,UAAA,EAAE,EAAC,QAHH;AAIA,UAAA,SAAS,EAAC,YAJV;AAKA,UAAA,KAAK,EAAEJ,WALP;AAMA,UAAA,QAAQ,EAAG0B,CAAD,IAAMzB,cAAc,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV;AAN9B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUA;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,IAAI,EAAC,QAAtC;AAA+C,UAAA,OAAO,EAAExB,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,YADA,eAsBR,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEF;AAAvB;AAAA;AAAA;AAAA;AAAA,YAtBQ;AAAA,kBADJ;AA2BH,CAtED;;GAAMH,U;;KAAAA,U;AAwEN,eAAeA,UAAf","sourcesContent":["import React,{useState ,useEffect} from 'react';\r\nimport \"./styles.css\"\r\nimport { Weathercard } from './Weathercard';\r\n\r\nconst Weatherapi = () => {\r\n    const [searchvalue, setsearchvalue] = useState(\"mumbai\");\r\n    const [tempinfo, settempinfo] = useState({});\r\n    const getweatherinfo = async()=>{\r\ntry{\r\nlet url=`https://api.openweathermap.org/data/2.5/weather?q=${searchvalue}&units=metric&appid=f75ae5387e47083e3d770bbb0694dfbc`\r\nconst res= await fetch(url);\r\nconst data= await res.json();\r\nconsole.log(data)\r\nconst {temp, humidity , pressure} =data.main;\r\nconst {main :weathermood}=data.weather[0];\r\nconst {name}=data;\r\nconst {speed}=data.wind;\r\nconst {country , sunset}=data.sys;\r\n\r\n\r\nconst mynewweather={\r\n    temp,\r\n    humidity,\r\n    pressure,\r\n    weathermood,\r\n    name,\r\n    speed,\r\n    country,\r\n    sunset,\r\n}\r\nsettempinfo(mynewweather)\r\n\r\n}\r\n\r\ncatch(error){\r\n    console.log(error)\r\n\r\n}\r\n\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getweatherinfo();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <div className=\"wrap\">\r\n<div className=\"search\">\r\n    <input type=\"search\"\r\n    placeholder='..search'\r\n    autoFocus\r\n    id='search'\r\n    className='searchTerm'\r\n    value={searchvalue}\r\n    onChange={(e)=> setsearchvalue(e.target.value)}\r\n    />\r\n\r\n<button className=\"searchButton\" type='button' onClick={getweatherinfo}>Search</button>\r\n\r\n</div>\r\n\r\n\r\n\r\n        </div>\r\n{/* article */}\r\n\r\n\r\n<Weathercard tempinfo={tempinfo}/>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Weatherapi;\r\n"]},"metadata":{},"sourceType":"module"}